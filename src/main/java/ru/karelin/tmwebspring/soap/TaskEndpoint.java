package ru.karelin.tmwebspring.soap;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.2.7
 * 2019-06-03T11:54:21.984+03:00
 * Generated source version: 3.2.7
 *
 */
@WebService(targetNamespace = "http://soap.tmwebspring.karelin.ru/", name = "TaskEndpoint")
@XmlSeeAlso({ObjectFactory.class})
public interface TaskEndpoint {

    @WebMethod
    @RequestWrapper(localName = "getTaskListByProjectId", targetNamespace = "http://soap.tmwebspring.karelin.ru/", className = "ru.karelin.tmwebspring.soap.GetTaskListByProjectId")
    @ResponseWrapper(localName = "getTaskListByProjectIdResponse", targetNamespace = "http://soap.tmwebspring.karelin.ru/", className = "ru.karelin.tmwebspring.soap.GetTaskListByProjectIdResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.util.List<ru.karelin.tmwebspring.soap.TaskDto> getTaskListByProjectId(
        @WebParam(name = "projectId", targetNamespace = "")
        java.lang.String projectId
    );

    @WebMethod
    @RequestWrapper(localName = "getTaskList", targetNamespace = "http://soap.tmwebspring.karelin.ru/", className = "ru.karelin.tmwebspring.soap.GetTaskList")
    @ResponseWrapper(localName = "getTaskListResponse", targetNamespace = "http://soap.tmwebspring.karelin.ru/", className = "ru.karelin.tmwebspring.soap.GetTaskListResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.util.List<ru.karelin.tmwebspring.soap.TaskDto> getTaskList();

    @WebMethod
    @RequestWrapper(localName = "removeTaskById", targetNamespace = "http://soap.tmwebspring.karelin.ru/", className = "ru.karelin.tmwebspring.soap.RemoveTaskById")
    @ResponseWrapper(localName = "removeTaskByIdResponse", targetNamespace = "http://soap.tmwebspring.karelin.ru/", className = "ru.karelin.tmwebspring.soap.RemoveTaskByIdResponse")
    public void removeTaskById(
        @WebParam(name = "taskId", targetNamespace = "")
        java.lang.String taskId
    );

    @WebMethod
    @RequestWrapper(localName = "getTaskById", targetNamespace = "http://soap.tmwebspring.karelin.ru/", className = "ru.karelin.tmwebspring.soap.GetTaskById")
    @ResponseWrapper(localName = "getTaskByIdResponse", targetNamespace = "http://soap.tmwebspring.karelin.ru/", className = "ru.karelin.tmwebspring.soap.GetTaskByIdResponse")
    @WebResult(name = "return", targetNamespace = "")
    public ru.karelin.tmwebspring.soap.TaskDto getTaskById(
        @WebParam(name = "taskId", targetNamespace = "")
        java.lang.String taskId
    );

    @WebMethod
    @RequestWrapper(localName = "updateTask", targetNamespace = "http://soap.tmwebspring.karelin.ru/", className = "ru.karelin.tmwebspring.soap.UpdateTask")
    @ResponseWrapper(localName = "updateTaskResponse", targetNamespace = "http://soap.tmwebspring.karelin.ru/", className = "ru.karelin.tmwebspring.soap.UpdateTaskResponse")
    public void updateTask(
        @WebParam(name = "task", targetNamespace = "")
        ru.karelin.tmwebspring.soap.TaskDto task
    );
}
