package ru.karelin.tmwebspring.soap;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.2.7
 * 2019-06-03T11:54:20.720+03:00
 * Generated source version: 3.2.7
 *
 */
@WebService(targetNamespace = "http://soap.tmwebspring.karelin.ru/", name = "ProjectEndpoint")
@XmlSeeAlso({ObjectFactory.class})
public interface ProjectEndpoint {

    @WebMethod
    @RequestWrapper(localName = "getProjectById", targetNamespace = "http://soap.tmwebspring.karelin.ru/", className = "ru.karelin.tmwebspring.soap.GetProjectById")
    @ResponseWrapper(localName = "getProjectByIdResponse", targetNamespace = "http://soap.tmwebspring.karelin.ru/", className = "ru.karelin.tmwebspring.soap.GetProjectByIdResponse")
    @WebResult(name = "return", targetNamespace = "")
    public ru.karelin.tmwebspring.soap.ProjectDto getProjectById(
        @WebParam(name = "projectId", targetNamespace = "")
        java.lang.String projectId
    );

    @WebMethod
    @RequestWrapper(localName = "getProjectList", targetNamespace = "http://soap.tmwebspring.karelin.ru/", className = "ru.karelin.tmwebspring.soap.GetProjectList")
    @ResponseWrapper(localName = "getProjectListResponse", targetNamespace = "http://soap.tmwebspring.karelin.ru/", className = "ru.karelin.tmwebspring.soap.GetProjectListResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.util.List<ru.karelin.tmwebspring.soap.ProjectDto> getProjectList();

    @WebMethod
    @RequestWrapper(localName = "updateProject", targetNamespace = "http://soap.tmwebspring.karelin.ru/", className = "ru.karelin.tmwebspring.soap.UpdateProject")
    @ResponseWrapper(localName = "updateProjectResponse", targetNamespace = "http://soap.tmwebspring.karelin.ru/", className = "ru.karelin.tmwebspring.soap.UpdateProjectResponse")
    public void updateProject(
        @WebParam(name = "project", targetNamespace = "")
        ru.karelin.tmwebspring.soap.ProjectDto project
    );

    @WebMethod
    @RequestWrapper(localName = "removeProjectById", targetNamespace = "http://soap.tmwebspring.karelin.ru/", className = "ru.karelin.tmwebspring.soap.RemoveProjectById")
    @ResponseWrapper(localName = "removeProjectByIdResponse", targetNamespace = "http://soap.tmwebspring.karelin.ru/", className = "ru.karelin.tmwebspring.soap.RemoveProjectByIdResponse")
    public void removeProjectById(
        @WebParam(name = "projectId", targetNamespace = "")
        java.lang.String projectId
    );
}
